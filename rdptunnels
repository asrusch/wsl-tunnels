#!/bin/bash
# WSL RDP Client Tunnels
# by Greg Lawler and Andy Rusch

#### Prerequisites ####
# autossh package is installed
# Your WSL Username and key are on jump_host

##### Defaults
 : ${config:=./rdptunnels.conf}
 : ${ssh_config:=~/.ssh/config}
# Exit on error
set -e

function stop-all {
    current_tunnel=`ps -ef | grep autossh | grep 33389 | grep -v grep | awk '{print $NF}'`
    # Exit if no tunnels running
    if [ -z "$current_tunnel" ]; then
        echo "No tunnel found"
        exit 1
    fi
    echo "Stopping autossh sessions to $current_tunnel..."
    ps -ef | grep autossh | grep 33389 | grep -v grep | awk '{print $2}' | xargs kill -9
    ps -ef | grep ssh | grep "L 25000" | grep -v grep | awk '{print $2}' | xargs kill -9
    }

function usage_message {
    echo `basename $0`: ERROR: $* 1>&2
    echo Usage: `basename $0` '{start|stop|status}' 1>&2
    exit 1
}
function show_locations() {
    echo Usage: `basename $0` '{location|stop|status}' 1>&2
    echo ""
    echo "Available locations in" $config
    while IFS=',' read -r client_service ssh_server rdp_host; do
        echo "$client_service" 
    done < $config
}

function show-status {
    current_tunnel=`ps -ef | grep autossh | grep 33389 | grep -v grep | awk '{print $NF}'`
    ps auxw | grep -v -e autossh -e grep | grep -q 33389 && echo "Local SSH tunnel running to $current_tunnel..." || echo "No Local SSH tunnels running..."
    }

function launch_rdp() {
    # Start the RDP Session
    mstsc.exe /w:1920 /h:1080 /v:127.0.0.1:33389 > /dev/null 2>&1 &
}

function start_tunnel {
    # Exit if existing autossh session detected
    current_tunnel=`ps -ef | grep autossh | grep 2080 | grep -v grep | awk '{print $NF}'`
    ps auxw | grep -v -e autossh -e grep | grep -q 33389 && echo "SSH tunnel already running to $current_tunnel..." && exit 1
    echo "Starting Local SSH tunnel $client_service..."
    autossh -N -M 25000 -L 33389:$rdp_host:3389 -o ServerAliveInterval=3 -o ServerAliveCountMax=3 -F $ssh_config $ssh_server > /dev/null 2>&1 &
}

function get_client() {
    while IFS=',' read -r client_service ssh_server rdp_host || [ -n "$line" ]; do
        if [[ $client_service == $jump_host ]]
        then
            start_tunnel "$ssh_server"
            sleep 3
            # Don't launch if tunnel not started
            current_tunnel=`ps -ef | grep autossh | grep 33389 | grep -v grep | awk '{print $NF}'`
            if [ -z "$current_tunnel" ]; then
                echo "Tunnel not started, exiting..."
                exit 1
            fi
            show-status
            launch_rdp
            echo "Launching RDP..." $client_url
        fi
    done < $config
}


if [ $# -eq 0 ]; # If no input, show available locations
then
    show_locations
    exit 1
else
    jump_host=${1//[^a-zA-Z0-9]/-} # Sanitize the input a bit
    if [ $jump_host == "stop" ]
    then
        stop-all
    elif [ $jump_host == "status" ]
    then
        show-status
    else
        get_client "$jump_host"
    fi
fi
